#Prog ProductionSystem_ExchangeXPDM_GetAllEntitiesWithRootRscScope (iPLMIDSet :  #In PLMIDSet,oPLMIDSet :  #Out PLMIDSet) : VoidType
  {
let PLMRouteSet1 (PLMRouteSet)
let PLMRouteSet2 (PLMRouteSet)
let PLMRouteSet3 (PLMRouteSet)
let PLMRouteSet4 (PLMRouteSet)
let PLMRouteSet5 (PLMRouteSet)
let PLMRouteSet6 (PLMRouteSet)
let PLMRouteSet8 (PLMRouteSet)
let PLMRouteSet10 (PLMRouteSet)
let PLMRouteSet11 (PLMRouteSet)
let PLMRouteSet12 (PLMRouteSet)
let PLMRouteSet_PlugRep (PLMRouteSet)
let PLMRouteSetDRPorts  (PLMRouteSet)

let PLMIDSet1 (PLMIDSet)
let PLMIDSet1a (PLMIDSet)
let PLMIDSet2 (PLMIDSet)
let PLMIDSet3 (PLMIDSet)
let PLMIDSet3a (PLMIDSet)
let PLMIDSet4 (PLMIDSet)
let PLMIDSet5 (PLMIDSet)
let PLMIDSet6 (PLMIDSet)
let PLMIDSet8 (PLMIDSet)
let PLMIDSet10 (PLMIDSet)
let PLMIDSet11 (PLMIDSet)
let PLMIDSet12 (PLMIDSet)
let PLMIDSet_PlugRep (PLMIDSet)
let PLMIDSetProcessRef(PLMIDSet)
let PLMIDSetDRPorts(PLMIDSet)

/* Retrieves all entities aggregated by Systems or Operations Roots */
PLMRouteSet1 = ExecutePLMFunction("DELLmiProductionSystemAbstract", "ENOPsm_ProductionSystem_addAllEntitiesWithoutDocRep", Restrict(iPLMIDSet, "DELLmiProductionSystemAbstract/DELLmiAbstractProductionEntity"))
PLMIDSet1 = Ids(PLMRouteSet1,"all")
PLMIDSet1a = Restrict(iPLMIDSet, "DELLmiProductionSystemAbstract/DELLmiAbstractProductionEntity") + PLMIDSet1

/* Retrieves fathers of Systems or Operations*/
PLMRouteSet2 = ExecutePLMFunction("DELPPRContextModel", "ENOPpr_PPRData_addAllFathers", Restrict(iPLMIDSet, "DELLmiProductionSystemAbstract/DELLmiAbstractProductionEntity"))
PLMIDSet2 = Ids(PLMRouteSet2,"all")

/* Retrieves Implemented Process Scope from Systems References*/
PLMRouteSet3 = ExecutePLMFunction("RFLPLMImplementConnection", "RFLPLMImplementConnection_AddAllImplementedComponents", PLMIDSet1 )
PLMIDSet3 = Ids(PLMRouteSet3,"all")
PLMIDSet3a = Restrict(PLMIDSet3, "DELFmiFunctionalModel/DELFmiFunctionReference")


/* Retrieves sons (instances + references) of Process scope*/
PLMRouteSet4 = ExecutePLMFunction("DELPPRContextModel", "ENOPpr_PPRData_ExpandStructure", PLMIDSet3a)
PLMIDSet4 = Ids(PLMRouteSet4,"all")

/* Retrieves Candidate Resources Scopes from System or Operation References */
PLMRouteSet5 = ExecutePLMFunction("DELPPRContextModel", "ENOPsm_ProductionSystem_addCandidateResourcesScope", PLMIDSet1a )
PLMIDSet5 = Ids(PLMRouteSet5,"all")

/* Retrieves Candidate Resources from System or Operation References */
PLMRouteSet6 = ExecutePLMFunction("DELPPRContextModel", "ENOPsm_ProductionSystem_addCandidateResources", PLMIDSet1a )
PLMIDSet6 = Ids(PLMRouteSet6,"all")

/* Retrieves all references and aggregating references from products instances*/
PLMRouteSet11 = ExecutePLMFunction("DELPPRContextModel", "ENOPpr_PPRData_addRefAndAggregatingRef", Restrict(PLMIDSet6, "PRODUCTCFG/VPMInstance"))
PLMIDSet11 = Ids(PLMRouteSet11,"all")

PLMRouteSet_PlugRep = ExecutePLMFunction("DELLmiProductionSystemAbstract", "ENOPsm_ProductionSystem_addPlugRep", Restrict(iPLMIDSet, "DELLmiProductionSystemAbstract/DELLmiAbstractProductionEntity"))
PLMIDSet_PlugRep = Ids(PLMRouteSet_PlugRep,"all")

/* Retrieves Process Reference pointed by Plug Rep Reference */
PLMRouteSet8 = ExecutePLMFunction("DELLmiProductionDocRep", "DELLmiProductionDocRep_addLinkToProcess", Restrict(PLMIDSet_PlugRep, "DELLmiProductionDocRep/DELLmiDocRepReference"))
PLMIDSet8 =Restrict(Ids(PLMRouteSet8,"all") ,  "DELFmiFunctionalModel/DELFmiFunctionReference")

/* Retrieves Capable Resources from System or Operation References */
PLMRouteSet10 = ExecutePLMFunction("DELPPRContextModel", "ENOPcs_Process_addCapableResources", PLMIDSet1a)
PLMIDSet10 = Ids(PLMRouteSet10,"all")

/* Retrieves Scope Resource from Root System Reference ONLY */
PLMRouteSet12 = ExecutePLMFunction("DELPPRContextModel", "ENORsc_Resource_AddImplementingScope", Restrict(iPLMIDSet, "DELLmiProductionSystem/DELLmiProductionSystemReference"))
PLMIDSet12 = Ids(PLMRouteSet12,"all")

/*Retrieves the Data Requierement Ports for Process, to avoid creation of implicit DR Ports that will creates incoherence*/
PLMIDSetProcessRef = PLMIDSet3a + Restrict(PLMIDSet4, "DELFmiFunctionalModel/DELFmiFunctionReference") + Restrict(PLMIDSet8, "DELFmiFunctionalModel/DELFmiFunctionReference")
PLMRouteSetDRPorts = ExecutePLMFunction("DELFmiFunctionalModel", "DELFmiFunctionModel_expandDRPorts", PLMIDSetProcessRef)
PLMIDSetDRPorts = Ids(PLMRouteSetDRPorts,"all")

oPLMIDSet = iPLMIDSet + PLMIDSet1 + PLMIDSet2 + PLMIDSet3 + PLMIDSet4 + PLMIDSet5 + PLMIDSet6  + PLMIDSet8 + PLMIDSet10 + PLMIDSet11 + PLMIDSet_PlugRep + PLMIDSet12 + PLMIDSetDRPorts

}



#Prog XCAD_CompleteItemsForTSO (iPLMIDSet : #In PLMIDSet, oPLMIDSet : #Out PLMIDSet) : VoidType
{
/* Variables */
  let PLMIDSet_inRef (PLMIDSet)
  let PLMIDSet_input (PLMIDSet)
  let PLMIDSet_composer (PLMIDSet)
  let PLMIDSet_composed (PLMIDSet)
  let PLMIDSet_allComp (PLMIDSet)
  let PLMIDSet_compoLinks (PLMIDSet)
  let PLMIDSet_component (PLMIDSet)
  let PLMIDSet_expand (PLMIDSet)
  let PLMIDSet_output (PLMIDSet)

/* filter input */
  PLMIDSet_inRef = Restrict (iPLMIDSet, "PRODUCTCFG/VPMReference")

/* Filter XCAD */
/*  PLMIDSet_input = Ids (ExecutePLMFunction ("XCADModeler", "XCAD_SelectXCADData",PLMIDSet_inRef)) */
  PLMIDSet_input = PLMIDSet_inRef

/* retrieve composer from items */
  PLMIDSet_composer = Ids (ExecutePLMFunction ("XCADModeler", "XCAD_GetComposedRefToRef",PLMIDSet_input))

/* retrieve composed from family */
  PLMIDSet_composed = Ids (ExecutePLMFunction ("XCADModeler", "XCAD_GetCompositionRefToRef",PLMIDSet_composer))

/* I have all compostion links */
  PLMIDSet_allComp =  PLMIDSet_composed + PLMIDSet_composer
  PLMIDSet_compoLinks = Restrict(PLMIDSet_allComp, "RelationClass/XCADComposition")

/* I get all component */
  PLMIDSet_component = Ids (ExecutePLMFunction ("XCADModeler", "XCAD_GetComponentFromLink",PLMIDSet_compoLinks))

/* expand one reverse */
  PLMIDSet_expand = Ids (ExecutePLMFunction ("XCADModeler", "XCAD_ExpandReverseOne",Restrict(PLMIDSet_component, "PRODUCTCFG/VPMReference")))
  PLMIDSet_output = PLMIDSet_compoLinks + PLMIDSet_component + PLMIDSet_expand

/* build output */
  oPLMIDSet = iPLMIDSet + PLMIDSet_output

}

#Prog Functional_ExportMultiplexerRef_TSO ( iPLMIDSet : #In PLMIDSet, oPLMIDSet : #Out PLMIDSet ) : VoidType
{
  let InputPLMIDSetRestrictedToRefs(PLMIDSet)
  let SetOfPLMRoutesMuxObjects(PLMRouteSet)
  let SetOfMuxObjectsPLMIDs(PLMIDSet)
  let SetOfConfigObjectsPLMIDs(PLMIDset)

  InputPLMIDSetRestrictedToRefs = Restrict(iPLMIDSet,"RFLPLMFunctionalCommunication/RFLPLMFunctionalCommunicationReference")
 
  /* Get ports, flow instances under the functional communication reference (resp: F1T) */
  SetOfPLMRoutesMuxObjects = ExecutePLMFunction("RFLPLMFunctional","RFLPLMFunctionalCommunicationReference_Aggregated1stLvlObjects",InputPLMIDSetRestrictedToRefs)

  /*Completes with configuration */
  SetOfConfigObjectsPLMIDs = ExecutePLMProcedure("Config_GetStructConfig",InputPLMIDSetRestrictedToRefs)
  
  oPLMIDSet = iPLMIDSet + Ids(SetOfPLMRoutesMuxObjects) + SetOfConfigObjectsPLMIDs
}

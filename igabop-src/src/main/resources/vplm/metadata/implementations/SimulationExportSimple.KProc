#Prog SimulationExportSimple (iPLMIDSet :  #In PLMIDSet,oPLMIDSet :  #Out PLMIDSet) : VoidType
  {
let IdsCategoriesAndSo(PLMIDSet)
let IdsProductStructure(PLMIDSet)
let IdsExtDoc(PLMIDSet)
let IdsSimuRep(PLMIDSet)
let IdsSimuPointedTable(PLMIDSet)
let IdsExtDocFromSimuRep(PLMIDSet)
let IdsProdAndChildren(PLMIDSet)
let IdsPublishResult(PLMIDSet)
let IdsSetModel (PLMIDSet) 
let IdsMatRefandDomainfromFEMRep(PLMIDSet) 
let IdsPortParam (PLMIDSet)


let RouteSetCategoriesAndSo (PLMRouteSet)
let RouteSetModel (PLMRouteSet)
let RouteSetExtDoc (PLMRouteSet)
let RoutePortParam(PLMRouteSet)
let RouteSimuRep (PLMRouteSet)
let RouteSimuPointedTable (PLMRouteSet)
let RouteExtDocFromSimuRep (PLMRouteSet)
let RouteSetProdAndChildren (PLMRouteSet)
let RoutePublishResult (PLMRouteSet)
let RouteMatRefandDomainfromFEMRep(PLMRouteSet)
 



/* getting categories + so */
RouteSetCategoriesAndSo = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_retrieveCategories", iPLMIDSet)
IdsCategoriesAndSo = Ids( RouteSetCategoriesAndSo)

/* getting External documents from SO or\and from Categories */
 RouteSetExtDoc = ExecutePLMFunction("PLMDocConnection", "PLMDocConnection_retrieveAllDocuments", IdsCategoriesAndSo)
IdsExtDoc = Ids(RouteSetExtDoc)

/* getting Ports from SO  */
 RoutePortParam = ExecutePLMFunction("PLMParameter", "PAR_nav_paramports", IdsCategoriesAndSo)
IdsPortParam = Ids(RoutePortParam)

/* getting system connection + product */
RouteSetModel = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_addSimulatedModel", Restrict(IdsCategoriesAndSo, "SIMObjSimulationCategoryAndProdCnx/SIMObjSimulationCategoryReference"))
IdsSetModel =   Ids(RouteSetModel)


/*getting Product and Children from Product*/
RouteSetProdAndChildren = ExecutePLMFunction("PRODUCTCFG", "ProductCfg_AddChildrenProduct",   Restrict(Ids(RouteSetModel, "last"), "PRODUCTCFG/VPMReference"))
IdsProdAndChildren = Ids(RouteSetProdAndChildren)



/* calling Product Procedure*/
IdsProductStructure  =  ExecutePLMProcedure(  "VPMEditor_GetAllRepresentations",  IdsProdAndChildren ) 



 /*getting Material Reference and MatDomain from FEM rep under Product*/
RouteMatRefandDomainfromFEMRep = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_retrieveMatRefandDomainfromFEMRep", Restrict(IdsProductStructure, "PRODUCTCFG/VPMRepReference"))
IdsMatRefandDomainfromFEMRep = Ids(RouteMatRefandDomainfromFEMRep)


/* getting simu rep under category Scenario*/
RouteSimuRep = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_retrieveSimuRep", Restrict(IdsCategoriesAndSo, "SIMObjSimulationCategoryAndProdCnx/SIMObjSimulationCategoryReference"))
IdsSimuRep = Ids(RouteSimuRep)

 

/*Completes with PointedDesignTable for Scenario Rep */
RouteSimuPointedTable = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_AddPointedDesignTable",  Restrict(IdsSimuRep,  "SIMObjSimulationV5Generic/SIMObjSimulationV5RepReferenceGeneric"))
IdsSimuPointedTable = Ids(RouteSimuPointedTable)

/* getting external doc from simu rep */
RouteExtDocFromSimuRep = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_retrieveExternalDocumentfromSimuRep", Restrict(IdsSimuRep, "SIMObjSimulationV5Generic/SIMObjSimulationV5RepReferenceGeneric"))
IdsExtDocFromSimuRep = Ids(RouteExtDocFromSimuRep)

/* getting publish result connection + target of the connection */
 RoutePublishResult  = ExecutePLMFunction("SIMObjSimulationGeneric", "sim_addPublishResultCnx", Restrict(IdsCategoriesAndSo, "SIMObjSimulationCategoryAndProdCnx/SIMObjSimulationCategoryReference"))
 IdsPublishResult = Ids(RoutePublishResult)
 
 


oPLMIDSet = IdsCategoriesAndSo + IdsExtDoc + IdsPortParam + IdsSetModel + IdsProdAndChildren + IdsProductStructure + IdsMatRefandDomainfromFEMRep + IdsSimuRep + IdsSimuPointedTable + IdsExtDocFromSimuRep + IdsPublishResult 

}


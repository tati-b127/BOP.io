#Prog MatDataFromCnxForOpen (iPLMIDSet :  #In PLMIDSet,oPLMIDSet :  #Out PLMIDSet) : VoidType
{
let PLMIDSet1(PLMIDSet)
let PLMIDSet2(PLMIDSet)
let PLMIDSet3(PLMIDSet)
let PLMIDSet4(PLMIDSet)
let PLMIDSet5(PLMIDSet)
let PLMRouteSet1 (PLMRouteSet)
let PLMRouteSet2 (PLMRouteSet)
let PLMRouteSet3 (PLMRouteSet)
let PLMRouteSet4 (PLMRouteSet)

/* getting all references form CATMaterial cnxs */
PLMRouteSet1 = ExecutePLMFunction("CATMaterial", "mat_retrieveMatRefFromCnx", Restrict(iPLMIDSet, "CATMaterial/CATMatConnection"))
PLMIDSet1 = Ids(PLMRouteSet1)

/* getting all materials references from material vector */
PLMRouteSet4 = ExecutePLMFunction("CATMaterialRef", "mat_retrieveMatRefFromVector", Restrict(PLMIDSet1, "CATMaterialRef/CATMatReference"))
PLMIDSet4 = Ids(PLMRouteSet4)
PLMIDSet5 = PLMIDSet1 + PLMIDSet4

/* getting all Domains and aggregated cnxs from material references */
PLMRouteSet2 = ExecutePLMFunction("CATMaterialRef", "mat_retrieveCnxsAndDomainsFromMatRef", Restrict(PLMIDSet5, "CATMaterialRef/CATMatReference"))
PLMIDSet2 = Ids(PLMRouteSet2)

/* getting Documents pointed by rendering domain*/
PLMRouteSet3 = ExecutePLMFunction("CATMaterialRef", "rdg_retrieveTexture",Restrict(PLMIDSet2, "CATMaterialRef/MaterialDomain"))
PLMIDSet3 = Ids(PLMRouteSet3)

oPLMIDSet = PLMIDSet1 +  PLMIDSet2 +  PLMIDSet3
}

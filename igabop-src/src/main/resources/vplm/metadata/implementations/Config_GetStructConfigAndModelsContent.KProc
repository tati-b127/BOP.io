#Prog Config_GetStructConfigAndModelsContent( iPLMIDSet : #In PLMIDSet, oPLMIDSet : #Out PLMIDSet ) : VoidType
{

let PLMRouteSetContext (PLMRouteSet)
let PLMRouteSetModel (PLMRouteSet)
let PLMRouteSetModelContent (PLMRouteSet)

let PLMIDSetInputRef (PLMIDSet)

let PLMIDSetContext (PLMIDSet)
let PLMIDSetModel (PLMIDSet)
let PLMIDSetModelContent (PLMIDSet)


/* Starting R2015x only complete with dictionary (and its content). Contexts, Effectivities, Configurations and SMAPs are retrieved by host modelers completion. */
/*---------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/* Retrieve Context associated to the configured References */
PLMIDSetInputRef = Restrict(iPLMIDSet, "PLMCORE/PLMCoreReference")
PLMRouteSetContext = ExecutePLMFunction("VPMCfgContext", "VPMCfgContext_AddContextFromReference", PLMIDSetInputRef)
PLMIDSetContext = Restrict(Ids(PLMRouteSetContext), "VPMCfgContext/VPMCfgContext")


/* Completes with Models associated to the Context */
PLMRouteSetModel = ExecutePLMFunction("VPMCfgContext", "VPMCfgContext_AddModelsFromContext", PLMIDSetContext)
PLMIDSetModel = Restrict(Ids(PLMRouteSetModel), "Class/Model")


/* Completes with the full content of the Model */
PLMRouteSetModelContent = ExecutePLMFunction("Product", "Product_AddCriteriaFromModel", PLMIDSetModel)
PLMIDSetModelContent = Ids(PLMRouteSetModelContent)

/* Fill output ID set */
oPLMIDSet = iPLMIDSet + PLMIDSetModel + PLMIDSetModelContent 

}

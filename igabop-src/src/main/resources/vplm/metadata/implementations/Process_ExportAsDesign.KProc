/*********************************************************************************************************************************/
/* Export procedure for Process                                                                                        */
/* --> Retrieves all agregated PLM objects (References, Ref Instances, Rep References, Rep Instances, Ports and Connections)     */
/*********************************************************************************************************************************/
#Prog Process_ExportAsDesign( iPLMIDSet : #In PLMIDSet, oPLMIDSet : #Out PLMIDSet ) : VoidType
{
	let PLMRouteSetAttachedDocuments (PLMRouteSet)
	let PLMRouteSetPortsAndCnx (PLMRouteSet)
	let PLMRouteSetImplCnx (PLMRouteSet)
	let PLMRouteSetCapableDocuments (PLMRouteSet)
	let PLMRouteSetRepRef (PLMRouteSet)
	let PLMRouteSetMatProduct (PLMRouteSet)
	let PLMRouteSetProducts (PLMRouteSet)

	let PLMIDSetProcessReference (PLMIDSet)
	let PLMIDSetProcessInstance (PLMIDSet)
	let PLMIDSetProcessRefAndInst (PLMIDSet)
	let PLMIDSetAttachedDocuments (PLMIDSet)
	let PLMIDSet_ConfigData (PLMIDSet)
	let PLMIDSetPortsAndCnx (PLMIDSet)
	let PLMIDSetDRPorts (PLMIDSet)
	let PLMIDSetPrecedencePorts (PLMIDSet)
	let PLMIDSetDRCnx (PLMIDSet)
	let PLMIDSetPrecedenceCnx (PLMIDSet)
	let PLMIDSetMaterialisationCnx (PLMIDSet)
	let PLMIDSetCapableCnx (PLMIDSet)
	let PLMIDSetImplCnx (PLMIDSet)
	let PLMIDSetCapableDocuments (PLMIDSet)
	let PLMIDSetAllRefInst (PLMIDSet)
	let PLMIDAllRef (PLMIDSet)
	let PLMIDSetRepInst (PLMIDSet)
	let PLMIDSetRepRef (PLMIDSet)
	let PLMIDSetMatProduct (PLMIDSet)
	let PLMIDSetProducts (PLMIDSet)
	let PLMIDSetProductStructure (PLMIDSet)
	let PLMIDSetAssignmentFilterCnx (PLMIDSet)
	let PLMIDSetHowToCnx (PLMIDSet)
	let PLMIDSetHistoRefCnx  (PLMIDSet)


	PLMIDSetProcessReference = Restrict(iPLMIDSet, "DELFmiFunctionalModel/DELFmiFunctionReference")
	PLMIDSetProcessInstance = Restrict(iPLMIDSet, "DELFmiFunctionalModel/DELFmiFunctionInstance")
	PLMIDSetProcessRefAndInst = PLMIDSetProcessReference + PLMIDSetProcessInstance
	PLMIDSetAllRefInst = Restrict(iPLMIDSet, "PLMCORE/PLMCoreReference") + Restrict(iPLMIDSet, "PLMCORE/PLMCoreInstance")

	/* Retrieves configuration data        */
	PLMIDSet_ConfigData = ExecutePLMProcedure("Config_GetStructConfig", PLMIDSetAllRefInst)

	/* Retrieves all Ports, Rep Instances and Cnx needed from reference         */
	PLMRouteSetPortsAndCnx  = ExecutePLMFunction("DELFmiFunctionalModel", "DELFmiFunctionalModel_addPortsRepInstAndCnxExceptImplCnx", PLMIDSetProcessReference)
	PLMIDSetPortsAndCnx = Ids(PLMRouteSetPortsAndCnx,"all")
	PLMIDSetDRPorts = Restrict(PLMIDSetPortsAndCnx, "DELFmiFunctionalModelPrerequisitePort/DELFmiProcessPrerequisitePort")
	PLMIDSetPrecedencePorts = Restrict(PLMIDSetPortsAndCnx, "DELFmiFunctionalModelPrecedencePort/DELFmiProcessPrecedencePort")
	PLMIDSetDRCnx = Restrict(PLMIDSetPortsAndCnx, "DELFmiFunctionalModelPrerequisiteCnx/DELFmiProcessPrerequisiteCnx") + Restrict(PLMIDSetPortsAndCnx, "DELFmiFunctionalModelPrerequisiteCnx1/DELFmiProcessPrerequisiteCnxCust")
	PLMIDSetPrecedenceCnx = Restrict(PLMIDSetPortsAndCnx, "DELFmiFunctionalModelPrecedenceCnx/DELFmiProcessPrecedenceCnx") + Restrict(PLMIDSetPortsAndCnx, "DELFmiFunctionalModelPrecedenceCnx1/DELFmiProcessPrecedenceCnxCust")
	PLMIDSetMaterialisationCnx = Restrict(PLMIDSetPortsAndCnx, "DELFmiFunctionalModelPrereqMatCnx/DELFmiProcessPrereqMaterializationCnx")
	PLMIDSetCapableCnx = Restrict(PLMIDSetPortsAndCnx, "DELAsmAssemblyModelCnx/DELAsmProcessCanUseCnx")
	PLMIDSetRepInst = Restrict(PLMIDSetPortsAndCnx, "DELFmiFunctionalModel/DELFmiFunctionRepresentationInstance")
	PLMIDSetAssignmentFilterCnx = Restrict(PLMIDSetPortsAndCnx, "PLMAssignmentFilter/PLMAssignmentFilterCnx")
	PLMIDSetHowToCnx = Restrict(PLMIDSetPortsAndCnx, "PLMRequirementSpecifyHowToCnxAbstract/PLMReqSpecifyHowToCnxAbstract")
	PLMIDSetHistoRefCnx = Restrict(PLMIDSetPortsAndCnx, "PLMHistorizationCnx/PLMHistoLinkCnx")

	/* Add rep references */
	PLMRouteSetRepRef  = ExecutePLMFunction("DELPPRContextModel", "ENOPpr_PPRData_addRepRef", PLMIDSetRepInst)
	PLMIDSetRepRef =Ids(PLMRouteSetRepRef,"all")

	/* Add implementing connections */
	PLMRouteSetImplCnx  = ExecutePLMFunction("DELFmiFunctionalModel", "DELFmiFunctionModel_AddImplementingCnx", PLMIDSetProcessRefAndInst)
	PLMIDSetImplCnx =Ids(PLMRouteSetImplCnx,"all")

	/* Retrieves all attached documents */
	PLMRouteSetAttachedDocuments = ExecutePLMFunction("PLMDocConnection", "PLMDocConnection_retrieveAllDocumentsIncludingCBP", PLMIDSetProcessReference)
	PLMIDSetAttachedDocuments = Ids(PLMRouteSetAttachedDocuments,"all")

	/* Retrieves all attached documents on capable connexions.*/
	PLMRouteSetCapableDocuments = ExecutePLMFunction("DELAsmAssemblyModelCnx", "DELAsmAssemblyModelCnx_addAllDocuments", PLMIDSetCapableCnx)
	PLMIDSetCapableDocuments = Ids(PLMRouteSetCapableDocuments,"all")

	/* Retrieves Product materialization pointed by materialization connections by PROCESSES */
	PLMRouteSetMatProduct = ExecutePLMFunction("DELPPRContextModel", "ENOPcx_PPRContext_addProductsLinkedToProcessPorts", PLMIDSetMaterialisationCnx)
	PLMIDSetMatProduct = Ids(PLMRouteSetMatProduct,"all")

	/* Retrieves all aggregated references and ref. instances for PRODUCTS and RESOURCES */
	PLMRouteSetProducts = ExecutePLMFunction("PRODUCTCFG", "ProductCfg_AddChildrenProduct", Restrict(Ids(PLMRouteSetMatProduct), "PRODUCTCFG/VPMReference"))
	PLMIDSetProducts = Ids(PLMRouteSetProducts,"all")
	
	/* Retrieves all aggregated representations (references / instances) for PRODUCTS and RESOURCES */
	PLMIDSetProductStructure = ExecutePLMProcedure("VPMEditor_GetAllRepresentations", Restrict(Ids(PLMRouteSetProducts), "PRODUCTCFG/VPMReference") + Restrict(Ids(PLMRouteSetProducts), "PRODUCTCFG/VPMRepReference"))


	/**********************/
	/* Returns all PLMIds */
	/**********************/
	oPLMIDSet = iPLMIDSet + PLMIDSet_ConfigData + PLMIDSetDRPorts + PLMIDSetPrecedencePorts + PLMIDSetMaterialisationCnx + PLMIDSetCapableCnx + PLMIDSetDRCnx + PLMIDSetPrecedenceCnx + PLMIDSetImplCnx + PLMIDSetAttachedDocuments + PLMIDSetCapableDocuments + PLMIDSetRepInst + PLMIDSetRepRef + PLMIDSetMatProduct + PLMIDSetProducts + PLMIDSetProductStructure + PLMIDSetAssignmentFilterCnx + PLMIDSetHowToCnx + PLMIDSetHistoRefCnx
}

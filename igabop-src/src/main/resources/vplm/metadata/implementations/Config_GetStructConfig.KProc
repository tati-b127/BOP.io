#Prog Config_GetStructConfig( iPLMIDSet : #In PLMIDSet, oPLMIDSet : #Out PLMIDSet ) : VoidType
{

let PLMRouteSetContext (PLMRouteSet)
/*let PLMRouteSetConfig (PLMRouteSet)*/
let PLMRouteSetEff (PLMRouteSet)
let PLMRouteSetInstConfig (PLMRouteSet)
let PLMRouteSetPredefConfig (PLMRouteSet)
let PLMRouteSetProductConfig (PLMRouteSet)

let PLMIDSetInputRef (PLMIDSet)
let PLMIDSetInputInst (PLMIDSet)

let PLMIDSetContext (PLMIDSet)
/*let PLMIDSetConfig (PLMIDSet)*/
let PLMIDSetEff (PLMIDSet)
let PLMIDSetInstConfig (PLMIDSet)
let PLMIDSetPredefConfig (PLMIDSet)
let PLMIDSetProductConfig (PLMIDSet)


/* Completes with Context associated to the configured References */

PLMIDSetInputRef = Restrict(iPLMIDSet, "PLMCORE/PLMCoreReference")
PLMRouteSetContext = ExecutePLMFunction("VPMCfgContext", "VPMCfgContext_AddContextFromReference", PLMIDSetInputRef)
PLMIDSetContext = Restrict(Ids(PLMRouteSetContext), "VPMCfgContext/VPMCfgContext")


/* Completes with Configurations associated to the configured References */

/* VALDRIV 13x.FP1724 - below query is commented : we do not want to add Predefined Configurations from Reference (= if user selection is a Reference) */
/* Predefined Configurations can be exported only in the case of static mapping (see the new query below)
/* PLMRouteSetConfig = ExecutePLMFunction("VPMCfgConfiguration", "VPMCfgConfiguration_AddConfigurationsFromReference", PLMIDSetInputRef) */
/* PLMIDSetConfig = Restrict(Ids(PLMRouteSetConfig), "VPMCfgConfiguration/VPMCfgConfiguration") */


/* Completes with Effectivity associated to the configured instances */

PLMIDSetInputInst = Restrict(iPLMIDSet, "PLMCORE/PLMCoreInstance")
PLMRouteSetEff = ExecutePLMFunction("VPMCfgEffectivity", "VPMCfgEffectivity_AddEffectivityFromInstance", PLMIDSetInputInst)
PLMIDSetEff = Restrict(Ids(PLMRouteSetEff), "VPMCfgEffectivity/VPMCfgEffectivity")


/* Completes with InstanceConfiguration associated to the configured instances */

PLMRouteSetInstConfig = ExecutePLMFunction("VPMCfgInstanceConfiguration", "VPMCfgInstanceConfiguration_AddInstanceConfigurationFromInstance", PLMIDSetInputInst)
PLMIDSetInstConfig = Restrict(Ids(PLMRouteSetInstConfig), "VPMCfgInstanceConfiguration/VPMCfgInstanceConfiguration")


/* Completes with Predefined Configurations associated to the Instance Configurations */

PLMRouteSetPredefConfig = ExecutePLMFunction("VPMCfgConfiguration", "VPMCfgConfiguration_AddPredefinedConfigurationFromInstanceConfiguration", PLMIDSetInstConfig)
PLMIDSetPredefConfig = Restrict(Ids(PLMRouteSetPredefConfig), "VPMCfgConfiguration/VPMCfgConfiguration")


/* Completes with Product Configurations associated to the Instance Configurations */

PLMRouteSetProductConfig = ExecutePLMFunction("Product Configuration", "ProductConfiguration_AddProductConfigurationFromInstanceConfiguration", PLMIDSetInstConfig)
PLMIDSetProductConfig = Restrict(Ids(PLMRouteSetProductConfig), "Class/Product Configuration")


/* Fill output ID set */

oPLMIDSet = iPLMIDSet + PLMIDSetContext + PLMIDSetEff + PLMIDSetInstConfig + PLMIDSetPredefConfig + PLMIDSetProductConfig

}
